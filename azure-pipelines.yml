trigger:
  branches:
    include:
    - outsystems
    - fix/yaml
pr: none

variables:
  SourcesDirectory: '$(Build.SourcesDirectory)'
  Project: 'requirejs'
  BuildConfiguration: 'Release'
  Config: '--configuration=$(BuildConfiguration)'
  CakePathLocation: '$(System.DefaultWorkingDirectory)'
  ReportDir: '$(Common.TestResultsDirectory)\coverage_report'
  TagName: 'v$(Build.BuildNumber)'
  
- stage: Deploy
  displayName: 'Deploy'
  jobs:
  - deployment: Deploy
    displayName: 'Deploy to npm private repository and creates a git release'
    timeoutInMinutes: 8
    pool:
      vmImage: 'windows-latest'
    environment: Automatic-Release
    strategy: 
      runOnce:
        deploy:
          steps:
          - script: dir
            displayName: List directory
          - checkout: self
          - script: echo ${{ github.refs }}
            displayName: Branch name 1
          - script: git branch
            displayName: Branch name 2
          - task: npmAuthenticate@0
            inputs:
              workingFile: '.npmrc'
              customEndpoint: 'NPM Authentication Token'
          - script: dir
            displayName: List directory
          - script: node ./tools/bump-version.js
            displayName: Bump version
          - script: uglifyjs require.js -mc --comments -o ./bin/r.js
            displayName: Build requirejs distribution
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(System.DefaultWorkingDirectory)'
              artifact: 'artifacts'
              publishLocation: 'pipeline'
          #Creates a Github release
          - task: GitHubRelease@1
            inputs:
              gitHubConnection: 'GitHub Release'
              repositoryName: '$(Build.Repository.Name)'
              action: 'create'
              target: '$(Build.SourceVersion)'
              tagSource: 'userSpecifiedTag'
              tag: '$(TagName)'
              changeLogCompareToRelease: 'lastFullRelease'
              changeLogType: 'commitBased'
          #Publishes the package into the private artifact repository    
          - task: Npm@1
            inputs:
              command: 'publish'
              workingDir: '$(Pipeline.Workspace)/artifacts/'
              publishRegistry: 'useFeed'
              publishFeed: 'd8b4d1eb-aeb3-4b5b-9b43-37b4fc985e2f'